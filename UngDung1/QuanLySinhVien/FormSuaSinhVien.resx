<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQUFCMkFBQ2ZBQUNmQUFDZkFBQ2ZBQUNmQUFDZkFBQ2ZBQUNmQUFDZkFB
        Q2ZBQUNmQUFDZkFBQ2ZBQUNmQUFDZkFBQ2ZBQUNmQUFDZkFBQlBGRkYCAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQjKOjo760NDR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR
        0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/uLi4/0RERX4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUFDZtHR0f//////////////////////////////
        ////////////////////////////////////////////////////////////////////////VlZWtgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQUNm0dHS////////////////////
        ////////7u7u//39/f//////////////////////////////////////////////////////////////
        //9WVle2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQ2bR0dL/////////
        //////////////////9tbW7/VlZX/5SUlf/U1NT//v7+////////////////////////////////////
        /////////////1ZWV7YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUFDZtHR
        0v///////////////////////////6Skpf9CQkP/QkJD/0JCQ/9ZWVn/oKCg/9fX1//+/v7/////////
        ////////////////////////VlZXtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABBQUNm0dHS////////////////////////////4uLi/0JCQ/9CQkP/QkJD/2hoaf/Kycn/pKOj/42M
        jf+hoaL/8fHx//////////////////////9WVle2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEFBQ2bR0dL/////////////////////////////////ZGRk/0JCQ/9SUlP/vr29/87N
        zf/Ozc3/zMrJ/8eKQ/+Nc1X/8fHx/////////////////1ZWV7YAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQUFDZtHR0v////////////////////////////////+hoaL/eHh4/8HA
        wf/Ozc3/zs3N/83KyP/NjUL/2HUA/9JzAv+Nc1T/8PDw////////////VlZXtgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQUNm0dHS/////////////////////////////////9/f
        3/+enp7/zs3N/87Nzf/Nysj/55tB/+h/A//XdAD/2HUA/9JzAv+MclP/8PDw//////9WVle2AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQ2bR0dL/////////////////////////
        /////////v7+/4+Pj//Ozc3/zcrJ/+ScRv//iwD//4sA/+h/A//XdAD/2HUA/9JzAv+McVP/7+/w/1ZW
        V7YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUFDZtHR0v//////////////
        ////////////////////////paSl/8fFxP/nplv/+Zck//mKBv//iwD//4sA/+h/A//XdAD/2HUA/9Jz
        Av+LcVL/UFBRtgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQUNm0dHS////
        ///////////////////////////////////e3t7/o3xO//+cKP//nCj/+Zck//mKBv//iwD//4sA/+h/
        A//XdAD/2HUA/9JzAv9vUS7eQUFCFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFB
        Q2bR0dL///////////////////////////////////////////+6urn/unw0//+cKP//nCj/+Zck//mK
        Bv//iwD//4sA/+h/A//XdAD/2HUA/9JzAv9xUi3SQEBBFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAQUFDZtHR0v////////////////////////////////////////////////+7urr/unw0//+c
        KP//nCj/+Zck//mKBv//iwD//4sA/+h/A//XdAD/2HUA/9JzAv9xUi3SQUFCFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABBQUNm0dHS////////////////////////////////////////////////////
        //+8u7r/unw0//+cKP//nCj/+Zck//mKBv//iwD//4sA/+h/A//XdAD/2HUA/9JzAv9xUi3UQEBBFgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQ2bR0dL/////////////////////////////////////////
        //////////////////+9vLv/unw0//+cKP//nCj/+Zck//mKBv//iwD//4sA/+h/A//XdAD/2HUA/9Jz
        Av9xUS3UQkJCGAAAAAAAAAAAAAAAAAAAAAAAAAAAQUFDZtHR0v//////////////////////////////
        //////////////////////////////////+9vbz/unw0//+cKP//nCj/+Zck//mKBv//iwD//4sA/+h/
        A//XdAD/2HUA/81zCf9eWlXWQkJCGAAAAAAAAAAAAAAAAAAAAABBQUJsjY2N/6Skpf+kpKX/pKSl/6Sk
        pf+kpKX/pKSl/6Skpf+srKz/6+vr//////////////////////+/vr3/unw0//+cKP//nCj/+Zck//mK
        Bv//iwD//4sA/+h/A//SdQf/ooxz/4iHh/9CQkPWQEBBGAAAAAAAAAAAAAAAAEFBQRhMTE3WxcXG/9/f
        4P/f3+D/39/g/9/f4P/f3+D/39/g/9fX1/+Dg4P/6urr//////////////////////+/vr3/u300//+c
        KP//nCj/+Zck//mKBv//iwD/94oH/6aPdP+Lior/S0pL/0JCQ/9BQULWPz9AFAAAAAAAAAAAAAAAAEFB
        QRhaWlvW4+Pk//7+/v/+/v7//v7+//7+/v/+/v7//v7+/9fX1/+rq6z/////////////////////////
        ///Av77/u301//+cKP//nCj/+Zck//GKDv+rkXP/i4qK/0tKS/9CQkP/QkJD/0JCQ/9BQUJkAAAAAAAA
        AAAAAAAAAAAAAEFBQRhaWlvW4+Pk//7+/v/+/v7//v7+//7+/v/+/v7/39/g/6Skpf//////////////
        ///////////////////BwL//u301//+cKP/3mi3/q5V7/4uKiv9LSkv/QkJD/0JCQ/9CQkP/QUFC9EFB
        QiwAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQRhaWlvW4+Pk//7+/v/+/v7//v7+//7+/v/f3+D/pKSl////
        ///////////////////////////////////BwcD/tXw5/6uVfP+Lior/S0pL/0JCQ/9CQkP/QkJD/0FB
        QvJBQUI+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQRhaWlvW4+Pk//7+/v/+/v7//v7+/9/f
        4P+kpKX////////////////////////////////////////////BwcH/b29v/0tKS/9CQkP/QkJD/0JC
        Q/9BQULwQUFCPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQRhaWlvW4+Pk//7+
        /v/+/v7/39/g/6Skpf////////////////////////////////////////////////9SUlLmQkJC+kJC
        Q/9CQkP/QUFC8EFBQjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFB
        QRhaWlvW4+Pk//7+/v/f3+D/pKSl/////////////////////////////////////////////////1ZW
        V7ZBQUJSQUFC9kFBQuxBQUI2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEFBQRhaWlvW4+Pk/9/f4P+kpKX/////////////////////////////////////////
        ////////VlZXtgAAAABCQkIMQkJCCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQRhaWlvWxcXG/6Skpf//////////////////////////////
        //////////////////9WVla2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQRhMTE3WjY2N/9HR0v/R0dL/0dHS/9HR
        0v/R0dL/0dHS/9HR0v/R0dL/ubm6/0RERYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFBQRhBQUJsQUFDZkFB
        Q2ZBQUNmQUFDZkFBQ2ZBQUNmQUFDZkFBQ2ZBQUJQRUVFAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////AAAP/wAAB/8AAAf/AAAH/wAAB/8AAAf/AAAH/wAAB/8AA
        Af/AAAH/wAAB/8AAAf/AAAD/wAAAf8AAAD/AAAAfwAAAD8AAAAfAAAAD4AAAA/AAAAP4AAAH/AAAD/4A
        AB//AAE//4AB///AAf//4AH///////////8=
</value>
  </data>
</root>